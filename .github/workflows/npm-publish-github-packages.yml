# This workflow will run tests using node and then publish a package to GitHub Packages when a release is created
# For more information see: https://docs.github.com/en/actions/publishing-packages/publishing-nodejs-packages

# 这个工作流在代码推送或手动触发时构建并发布Electron应用程序

name: Build and Publish Electron App

on:
  workflow_dispatch:
    inputs:
      version:
        description: '版本号 (例如: 1.0.0)'
        required: true
        default: '1.0.0'
      release_notes:
        description: '发布说明'
        required: false
        default: '新版本发布'
  push:
    branches:
      - main
    tags:
      - 'v*'  # 匹配所有以v开头的标签，例如v1.0.0

jobs:
  build:
    runs-on: windows-latest
    
    steps:
      - name: 检出代码
        uses: actions/checkout@v4

      - name: 设置Node.js环境
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'npm'

      - name: 安装依赖
        run: npm ci

      - name: 构建应用程序
        run: npm run build:win

      - name: 上传构建产物
        uses: actions/upload-artifact@v4
        with:
          name: electron-app-windows
          path: |
            dist/*.exe
          retention-days: 5

  publish-release:
    needs: build
    runs-on: ubuntu-latest
    permissions:
      contents: write
    # 只有在手动触发或推送标签时才发布
    if: github.event_name == 'workflow_dispatch' || startsWith(github.ref, 'refs/tags/v')
    
    steps:
      - name: 下载构建产物
        uses: actions/download-artifact@v4
        with:
          name: electron-app-windows
          path: dist

      - name: 显示构建产物结构
        run: |
          ls -la dist/

      - name: 获取版本号
        id: get_version
        run: |
          if [ "${{ github.event_name }}" == "workflow_dispatch" ]; then
            echo "VERSION=${{ github.event.inputs.version }}" >> $GITHUB_ENV
            echo "RELEASE_NOTES=${{ github.event.inputs.release_notes }}" >> $GITHUB_ENV
          else
            # 从标签中提取版本号，去掉v前缀
            VERSION=${GITHUB_REF#refs/tags/v}
            echo "VERSION=$VERSION" >> $GITHUB_ENV
            echo "RELEASE_NOTES=自动发布版本 $VERSION" >> $GITHUB_ENV
          fi

      - name: 创建发布
        uses: ncipollo/release-action@v1
        with:
          artifacts: "dist/*.exe"
          tag: v${{ env.VERSION }}
          name: 版本 ${{ env.VERSION }}
          body: |
            ${{ env.RELEASE_NOTES }}
            
            构建时间: ${{ github.event.created_at || github.event.head_commit.timestamp }}
            提交: ${{ github.sha }}
          token: ${{ secrets.GITHUB_TOKEN }}
          allowUpdates: true
          draft: false
          prerelease: false
