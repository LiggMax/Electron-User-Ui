# This workflow will run tests using node and then publish a package to GitHub Packages when a release is created
# For more information see: https://docs.github.com/en/actions/publishing-packages/publishing-nodejs-packages

# 这个工作流会在代码推送到main分支时，自动构建并发布Electron应用程序

name: Build and Publish Electron App

on:
  push:
    branches: [ main ]

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [windows-latest]
        # 如需添加其他平台，可以取消注释以下内容
        # os: [windows-latest, macos-latest, ubuntu-latest]
    
    steps:
      - name: 检出代码
        uses: actions/checkout@v4
        
      - name: 设置Node.js环境
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'npm'
          
      - name: 安装依赖
        run: npm ci
        
      - name: 构建应用程序
        run: npm run build:win
        if: matrix.os == 'windows-latest'
        
      # 如需添加其他平台构建，可以取消注释以下内容
      # - name: 构建MacOS应用程序
      #   run: npm run build:mac
      #   if: matrix.os == 'macos-latest'
      # 
      # - name: 构建Linux应用程序
      #   run: npm run build:linux
      #   if: matrix.os == 'ubuntu-latest'
        
      - name: 上传构建产物
        uses: actions/upload-artifact@v4
        with:
          name: electron-app-${{ matrix.os }}
          path: |
            dist/
            !dist/**/*.md
          retention-days: 5
          
  publish-release:
    needs: build
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main' # 确保只在main分支上发布
    
    steps:
      - name: 检出代码
        uses: actions/checkout@v4
      
      - name: 下载所有构建产物
        uses: actions/download-artifact@v4
        with:
          path: artifacts
          
      - name: 显示构建产物结构
        run: |
          ls -R artifacts/
      
      - name: 创建发布
        id: create_release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: v${{ github.run_number }}
          name: 版本 ${{ github.run_number }}
          body: |
            自动构建发布版本 ${{ github.run_number }}
            提交：${{ github.sha }}
          draft: false
          prerelease: false
          files: |
            artifacts/**/*.exe
            artifacts/**/*.dmg
            artifacts/**/*.AppImage
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
